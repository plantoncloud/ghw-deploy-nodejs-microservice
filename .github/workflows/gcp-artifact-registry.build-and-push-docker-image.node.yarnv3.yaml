name: build-and-deploy

on:
  workflow_call:
    secrets:
      PLANTON_CLOUD_CLIENT_EMAIL:
        required: true
      PLANTON_CLOUD_CLIENT_SECRET:
        required: true
    inputs:
      PLANTON_CLOUD_ARTIFACT_STORE_ID:
        required: true
        type: string
      DOCKER_REPO_HOSTNAME:
        required: true
        type: string
      CONTAINER_IMAGE_REPO:
        required: true
        type: string
      CONTAINER_IMAGE_TAG:
        required: true
        type: string
      NODEJS_VERSION:
        required: false
        type: string
        default: 18.6
      YARN_VERSION:
        required: false
        type: string
        default: 3.6.1
      BUILD_DIRECTORY:
        required: false
        type: string
        default: .

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Install Planton CLI
        uses: plantoncloud/install-planton-cli-action@main
      
      - name: Login to Planton Cloud
        uses: plantoncloud/planton-cli-login-action@main
        with:
          planton_cloud_client_email: ${{ secrets.PLANTON_CLOUD_CLIENT_EMAIL }}
          planton_cloud_client_secret: ${{ secrets.PLANTON_CLOUD_CLIENT_SECRET }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.NODEJS_VERSION }}
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock' # https://stackoverflow.com/a/69375844/18082572

      # https://github.com/actions/setup-node/issues/325#issuecomment-1120962692
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ${{ inputs.BUILD_DIRECTORY }}/node_modules
          key: ${{ runner.OS }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-node-

      - name: Install Yarn V3
        run: |
          corepack enable
          corepack prepare yarn@${{ inputs.YARN_VERSION }} --activate
          yarn --version
        shell: bash
        working-directory: ${{ inputs.BUILD_DIRECTORY }}

      - name: Build with Make
        run:  make build

      - name: GCP Artifact Registry Docker Login
        uses: plantoncloud/gcp-artifact-registry-docker-login-action@main
        with:
          planton_cloud_artifact_store_id: ${{ inputs.PLANTON_CLOUD_ARTIFACT_STORE_ID }}
          docker_repo_hostname: ${{ inputs.DOCKER_REPO_HOSTNAME }}

      - name: Build & Push Docker Image
        uses: plantoncloud/build-and-push-docker-image-action@main
        with:
          docker_repo_hostname: ${{ inputs.DOCKER_REPO_HOSTNAME }}
          container_image_repo: ${{ inputs.CONTAINER_IMAGE_REPO }}
          container_image_tag: ${{ inputs.CONTAINER_IMAGE_TAG }}
